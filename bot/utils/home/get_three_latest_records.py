from typing import List

from database import RefuelRecord, ServiceRecord, Purchase


def get_three_latest_records(lst: List) -> str:
    if not lst:
        return ("<b>üå± –ò—Å—Ç–æ—Ä–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è</b>\n"
                "–ó–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è —Ç–≤–æ–∏ –ø–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏ –æ –∑–∞–ø—Ä–∞–≤–∫–∞—Ö, "
                "—Å–µ—Ä–≤–∏—Å–µ –∏ –ø–æ–∫—É–ø–∫–∞—Ö")

    text = "<b>üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</b>\n"

    records = list(sorted(
        lst,
        key=lambda record: record.created_at,
        reverse=True
    ))[:3]

    for record in records:
        price = (f"{record.total_price} ‚ÇΩ" if record.total_price
                 else "? ‚ÇΩ")
        if isinstance(record, RefuelRecord):
            text += (f"‚õΩ {record.refuel_date.strftime('%d.%m.%Y')} ‚Ä¢ "
                     f"–ó–∞–ø—Ä–∞–≤–∫–∞ ‚Ä¢ "
                     f"{price}\n")
        if isinstance(record, ServiceRecord):
            text += (f"üõ†Ô∏è {record.service_date.strftime('%d.%m.%Y')} ‚Ä¢ "
                     f"{record.title} ‚Ä¢ "
                     f"{price}\n")
        if isinstance(record, Purchase):
            text += (f"üíµ {record.purchase_date.strftime('%d.%m.%Y')} ‚Ä¢ "
                     f"{record.title} ‚Ä¢ "
                     f"{price}\n")

    return text
